name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-flask
    
    - name: Run basic syntax check
      run: |
        python -m py_compile app.py
        python -m py_compile run.py
    
    - name: Test Flask app initialization
      run: |
        python -c "from app import app; print('Flask app loads successfully')"
    
    - name: Check database schema
      run: |
        python -c "
        import os
        os.environ['DATABASE_URL'] = 'sqlite:///test.db'
        from app import app, db
        with app.app_context():
            db.create_all()
            print('Database schema created successfully')
        "

  build-status:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
    - name: Build Status Check
      run: |
        if [ "${{ needs.test.result }}" == "success" ]; then
          echo "‚úÖ Build passou - Pronto para deploy"
          echo "üöÄ Render Deploy: Autom√°tico no push para main"
          echo "üîó Vercel Deploy: Autom√°tico no push para main"
        else
          echo "‚ùå Build falhou - Deploy bloqueado"
          exit 1
        fi

  deploy-notification:
    runs-on: ubuntu-latest
    needs: [test, build-status]
    if: github.ref == 'refs/heads/main' && success()
    
    steps:
    - name: Deploy Notification
      run: |
        echo "üéâ Deploy iniciado automaticamente!"
        echo "üìç Render: https://saasaurarj.onrender.com (se configurado)"
        echo "üìç Vercel: https://saasaurarj.vercel.app (se configurado)"
        echo "‚è±Ô∏è Deploy pode levar alguns minutos para completar"